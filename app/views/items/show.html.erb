
<div class="image-show">
<%= attachment_image_tag @item, :image, :fill, 430, 430, format: 'jpeg' %>
</div>
<!--ここから天気-->
<div class="weather-infor">
<script type="text/javascript">
  $(function() {
    var API_KEY = "6cdb63a6e3091f0a9fa0054b678405d3"
    var city = 'Tokyo';
    var url = 'http://api.openweathermap.org/data/2.5/forecast?q=' + city + ',jp&units=metric&APPID=' + API_KEY;
    $.ajax({
      url: url,
      dataType: "json",
      type: 'GET',
    })
    .done(function(data) {
      console.log("aaa");
      var insertHTML = "";
      var cityName = '<h2>' + data.city.name + '</h2>';
      $('#city-name').html(cityName);
      for (var i = 0; i <= 8; i = i + 2) {
        insertHTML += buildHTML(data, i);
      }
      $('#weather').html(insertHTML);
    })
    .fail(function(data) {
      console.log("失敗しました");
    });
  });
      function buildHTML(data, i) {
  var Week = new Array("（日）","（月）","（火）","（水）","（木）","（金）","（土）");
  var date = new Date (data.list[i].dt_txt);
  date.setHours(date.getHours() + 9);
  var month = date.getMonth()+1;
  var day = month + "月" + date.getDate() + "日" + Week[date.getDay()] + date.getHours() + "：00";
  var icon = data.list[i].weather[0].icon;
  var html =
  '<div class="weather-report">' +
    '<img src="http://openweathermap.org/img/w/' + icon + '.png">' +
    '<div class="weather-date">' + day + '</div>' +
    '<div class="weather-main">'+ data.list[i].weather[0].main + '</div>' +
    '<div class="weather-temp">' + Math.round(data.list[i].main.temp) + '℃</div>' +
  '</div>';
  return html
}
</script>
  <div id="city-name">
  </div>
  <div id="weather"></div>
</div>
<!--ここまで天気-->

<div class="address-map">
<h2>住所</h2>
<div class= "copy-menu">
   <%= @item.address %> 
</div>



<h2>場所検索</h2>


<div id='map'>
</div>

<style>
#map{
  height: 400px;
  width: 50%;
}
</style>

<script>
/*
mapを関数の外で定義(codeAddressでも使うため)
geocoderを用意
*/

let map
let geocoder

function initMap(){
  // geocoderを初期化
  geocoder = new google.maps.Geocoder()

  map = new google.maps.Map(document.getElementById('map'), {
  center: {lat: 35.447, lng: 139.644},
  zoom: 7
  });
codeAddress();

}
function codeAddress(){
  // 入力を取得
  let inputAddress = "<%= @item.address %>"
  // geocodingしたあとmapを移動
  geocoder.geocode( { 'address': inputAddress}, function(results, status) {
    if (status == 'OK') {
　　　　　　　　　　　　// map.setCenterで地図が移動
      map.setCenter(results[0].geometry.location);

　　　　　　　　　　　　// google.maps.MarkerでGoogleMap上の指定位置にマーカが立つ
      var marker = new google.maps.Marker({
          map: map,
          position: results[0].geometry.location
      });
    } else {
      alert('Geocode was not successful for the following reason: ' + status);
    }
  });
}
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAK2GCxjx0SLVQjgaS-qbltlAS_9I8cD9Q&callback=initMap" async defer></script>
</div>






 <div class="yama-infor">
 <h2>山名</h2>
<h3><%= @item.name %></h3>
<hr>

<h2>地域</h2>
<h3><%= @item.area %></h3>
<hr>

<h2>山域</h2>
<h3><%= @item.range %></h3>
<hr>

<h2>標高</h2>
<h3><%= @item.elevation %></h3>
<hr>
</div>

<div class="item-overviws">
<h2>概要</h2>
<p><%= @item.overview %></p>
<hr>
</div>


<div>
<%= link_to "一覧へ", items_path %>
</div>
<% if admin_signed_in? %>
<%= link_to "編集", edit_item_path(@item.id) %>
<%= link_to "削除", item_path(@item.id), method: :delete, "data-confirm" => "本当に削除しますか？" %>
<% end %>


